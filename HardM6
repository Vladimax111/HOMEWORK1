class Figure:
    def __init__(self, sides, color):
        self.__sides = sides
        self.__color = color
        self.filled = False

    def get_color(self):
        return self.__color

    def __is_valid_color(self, r, g, b):
        return 0 <= r <= 255 and 0 <= g <= 255 and 0 <= b <= 255

    def set_color(self, r, g, b):
        if self.__is_valid_color(r, g, b):
            self.__color = (r, g, b)
        else:
            print(f"Нельзя сменить цвет на ({r}, {g}, {b})")

    def __is_valid_sides(self, *new_sides):
        return all(isinstance(side, int) and side > 0 for side in new_sides) and len(new_sides) == self.sides_count

    def get_sides(self):
        return self.__sides

    def __len__(self):
        return sum(self.__sides)

    def set_sides(self, *new_sides):
        if self.__is_valid_sides(*new_sides):
            self.__sides = new_sides
        else:
            print(f"Нельзя сменить стороны на {new_sides}")

class Circle(Figure):
    sides_count = 1

    def __init__(self, radius, color):
        super().__init__([radius], color)
        self.__radius = radius

    def get_square(self):
        return 3.14159 * self.__radius ** 2

class Triangle(Figure):
    sides_count = 3

    def __init__(self, side1, side2, side3, color):
        super().__init__([side1, side2, side3], color)

    def get_square(self):
        a, b, c = self.__sides
        s = (a + b + c) / 2
        return (s * (s - a) * (s - b) * (s - c)) ** 0.5

class Cube(Figure):
    sides_count = 12

    def __init__(self, side, color):
        super().__init__([side] * 12, color)

    def get_volume(self):
        return self.__sides[0] ** 3

# Код для проверки
if __name__ == "__main__":
    circle1 = Circle(10, (200, 200, 100))
    cube1 = Cube(10, (222, 35, 130))

    # Проверка на изменение цветов:
    circle1.set_color(55, 66, 77)  # Изменится
    print(circle1.get_color())
    cube1.set_color(300, 70, 15)  # Не изменится
    print(cube1.get_color())

    # Проверка на изменение сторон:
    cube1.set_sides(5, 3, 12, 4, 5)  # Не изменится
    print(cube1.get_sides())
    circle1.set_sides(15)  # Изменится
    print(circle1.get_sides())

    # Проверка периметра (круга), это и есть длина:
    print(len(circle1))

    # Проверка объёма (куба):
    print(cube1.get_volume())
